import numpy as np 
import matplotlib.pyplot as plt 
import pandas as pd 
from sklearn import preprocessing 
from sklearn.model_selection import train_test_split 
from sklearn.neighbors import KNeighborsClassifier 
from sklearn import metrics 
df = pd.read_csv('iris.csv') 
df.head() 
X = df.drop(['variety'], axis = 1) 
y = df['variety'] 
X = preprocessing.StandardScaler().fit(X).transform(X.astype(float)) 
X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=4) 
error_rate = [] 
for i in range(1,40): 
 knn = KNeighborsClassifier(n_neighbors=i) 
 knn.fit(X_train,y_train) 
 pred_i = knn.predict(X_test) 
 error_rate.append(np.mean(pred_i != y_test)) 
plt.figure(figsize=(10,6)) 
plt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', 
 marker='o',markerfacecolor='red', markersize=10) 
plt.title('Error Rate vs. K Value') 
plt.xlabel('K') 
plt.ylabel('Error Rate') 
print("Minimum error:-",min(error_rate),"at K =",error_rate.index(min(error_rate)))
